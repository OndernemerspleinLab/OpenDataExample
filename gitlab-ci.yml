stages:
  - build
  - release
  - deploy

variables:
  CONTAINER_IMAGE: dev
  CONTAINER_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}/${CONTAINER_NODEJS_IMAGE}:latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    - docker-compose -f docker-compose.ci.yml build --pull
    - docker tag $CONTAINER_IMAGE $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE:$CI_PIPELINE_ID
    - docker push $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE:$CI_PIPELINE_ID
    - docker rmi $CONTAINER_IMAGE
#only:
#  - develop

release-image-latest:
 stage: release
 script:
   - docker pull $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE:$CI_PIPELINE_ID
   - docker tag $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE:$CI_PIPELINE_ID $CONTAINER_WEB_RELEASE_IMAGE
   - docker push $CONTAINER_RELEASE_IMAGE
   - docker rmi $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE:$CI_PIPELINE_ID
   - docker push $CONTAINER_RELEASE_IMAGE
#  only:
#    - develop

deploy:
  stage: deploy
  script:
    - rancher-compose pull
    - rancher-compose up -d --pull --recreate --force-recreate --confirm-upgrade
#  only:
#    - develop